{"version":3,"sources":["api.js","components/Header.js","components/Popup.js","components/Category.js","components/TeamBoard.js","components/Splash.js","components/App.js","index.js"],"names":["instance","axios","create","baseURL","fetchTeams","get","then","resp","Object","toConsumableArray","Set","data","fetchSprint","team","concat","fetchItems","sprint","type","upVote","description","React","Component","Popup","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","value","category","handleChange","bind","assertThisInitialized","handleSubmit","close","event","preventDefault","sendData","closePopup","setState","target","react_default","a","createElement","Card","className","onClick","Form","Label","onSubmit","Group","onChange","controlId","Control","as","rows","Category","desc","upvoted","color","listItems","keys","items","map","item","Body","Text","increaseCount","toString","Splash","teams","sprints","selectedTeam","selectedSprint","open","_this2","api","_this3","console","log","defineProperty","name","_this4","Row","Col","md","span","offset","Dropdown","Toggle","variant","id","Menu","Item","changeTeam","changeSprint","Button","aria-controls","aria-expanded","Collapse","in","placeholder","sprintvalue","App","pageHeader","showPopup","selectTeam","selectSprint","onselectTeam","onselectSprint","components_Splash","ReactDOM","render","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.5ba8284c.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: \"http://0.0.0.0:5000/\"\n})\n\n//Return as set so removes duplicates\nexport const fetchTeams = () => {\n      return instance.get(`/teams`)\n        .then(resp => [...new Set(resp.data)])\n}\nexport const fetchSprint = (team) => {\n      return instance.get(`/${team}/sprint`)\n        .then(resp => [...new Set(resp.data)])\n}\nexport const fetchItems = (team, sprint, type) => {\n  return instance.get(`/${team}/${sprint}/${type}`)\n    .then(resp => resp.data)\n}\n\nexport const postDescription = (team, sprint, type, description) =>{\n  return instance.get(`/post/${team}/${sprint}/${type}/${description}`)\n    .then(resp => resp)\n}\n\nexport const upVote = (team, sprint, type, description) => {\n  return instance.get(`/${team}/${sprint}/${type}/${description}`)\n  .then(resp => resp)\n}\n\nexport const createTeam = (team, sprint) => {\n  return instance.get(`/post/${team}/${sprint}`)\n  .then(resp => resp)\n}\n","import React from \"react\";\nimport { Navbar, Nav, NavDropdown } from \"react-bootstrap\";\nimport * as api from \"../api\";\nclass Header extends React.Component {\n  state = {\n    teams: [],\n    sprints: [],\n    selected_team: \"Select Team\",\n    selected_sprint: \"Select Sprint\"\n  };\n  componentDidMount() {\n    api.fetchTeams().then(teams => {\n      this.setState({\n        teams\n      });\n      api.fetchSprint(this.state.selected_team).then(sprints => {\n        this.setState({\n          sprints\n        });\n      });\n    });\n  }\n\n  changeTeam(team){\n    api.fetchSprint(team.team).then(sprints => {\n      this.setState({\n        sprints: sprints,\n        selected_team: team.team,\n        selected_sprint: sprints[0]\n      });\n      this.props.selectedSprint(sprints[0]);\n    });\n    this.props.selectedTeam(team.team);\n  };\n  changeSprint(sprint) {\n    this.setState({\n      selected_sprint: sprint.sprint\n    });\n    this.props.selectedSprint(sprint.sprint);\n  }\n  render() {\n    return (\n      <div>\n        <Navbar>\n          <Navbar.Brand href=\"#home\" className=\"title\">\n            Retro\n          </Navbar.Brand>\n          <NavDropdown title={this.state.selected_team} id=\"basic-nav-dropdown\">\n            {this.state.teams.map(team => (\n              <NavDropdown.Item\n                href=\"#\"\n                onClick={this.changeTeam.bind(this, { team })}\n              >\n                {team}\n              </NavDropdown.Item>\n            ))}\n          </NavDropdown>\n          <NavDropdown\n            title={this.state.selected_sprint}\n            id=\"basic-nav-dropdown\"\n          >\n            {this.state.sprints.map(sprint => (\n              <NavDropdown.Item\n                href=\"#\"\n                onClick={this.changeSprint.bind(this, { sprint })}\n              >\n                {sprint}\n              </NavDropdown.Item>\n            ))}\n          </NavDropdown>\n        </Navbar>\n      </div>\n    );\n  }\n}\n\nexport default Header;\n","import React from \"react\";\nimport { Button, FormControl, Dropdown, Card, Form } from \"react-bootstrap\";\n\nclass Popup extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { value: \"\", category: this.props.category };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.close = this.close.bind(this);\n  }\n  handleSubmit(event) {\n    event.preventDefault();\n    this.props.sendData(this.state.category, this.state.value);\n    this.props.closePopup();\n  }\n  handleChange(event) {\n    this.setState({ value: event.target.value });\n  }\n\n  close(event){\n    event.preventDefault();\n    this.props.closePopup();\n  }\n\n  render() {\n    return (\n      <Card className=\"Popup\">\n        <div className=\"popup_inner\">\n          <a className=\"close\" onClick={this.close}>\n            &times;\n          </a>\n          <Form.Label className=\"category_label\">\n            Enter what went {this.state.category} :\n          </Form.Label>\n          <Form onSubmit={this.handleSubmit.bind()}>\n            <Form.Group\n              type=\"text\"\n              value={this.state.value}\n              onChange={this.handleChange}\n              controlId=\"exampleForm.ControlTextarea1\"\n            >\n              <Form.Control as=\"textarea\" rows=\"3\" />\n            </Form.Group>\n            <Form.Control\n              type=\"submit\"\n              value=\"Submit\"\n              className=\"submit_button\"\n            />\n          </Form>\n        </div>\n      </Card>\n    );\n  }\n}\n\nexport default Popup;\n","import React from \"react\";\nimport { Card } from \"react-bootstrap\";\nimport CardPreview from \"./CardPreview\";\nimport * as api from \"../api\";\nimport equal from \"fast-deep-equal\";\n\nclass Category extends React.Component {\n  increaseCount(desc) {\n    this.props.upvoted(desc, this.props.color);\n  }\n  render() {\n    const listItems = Object.keys(this.props.items).map(item => {\n      return (\n        <div className=\"issues\">\n            <Card.Body>\n              {item}\n              <Card.Text className=\"small_text\">\n                <small\n                  className=\"text-muted\"\n                  onClick={this.increaseCount.bind(this, { item })}\n                >\n                  {this.props.items[item].toString()}\n                </small>\n              </Card.Text>\n              <Card.Text className=\"card_line\"></Card.Text>\n            </Card.Body>\n        </div>\n      );\n    });\n    return <div>{listItems}</div>;\n  }\n}\n\nexport default Category;\n","import React from \"react\";\nimport CardPreview from \"./CardPreview\";\nimport { Container, Row, Col, Card, Button } from \"react-bootstrap\";\nimport Popup from \"./Popup\";\nimport * as api from \"../api\";\nimport equal from \"fast-deep-equal\";\nimport Category from \"./Category\";\nclass TeamBoard extends React.Component {\n  state = {\n    showWellPopup: false,\n    showBadPopup: false,\n    showImprovePopup: false,\n    team: this.props.team,\n    sprint: this.props.sprint,\n    well: [],\n    bad: [],\n    todo: [],\n    welldata: \"\",\n    currentCat: \"\",\n    description: \"\",\n    retro_type: \"\",\n  };\n\n  getDataFromChild = (cat, data) => {\n    this.setState({ welldata: data });\n    this.setState({ currentCat: cat });\n  };\n\n  toggleWellPopup() {\n    this.setState({\n      showWellPopup: !this.state.showWellPopup\n    });\n  }\n  toggleBadPopup() {\n    this.setState({\n      showBadPopup: !this.state.showBadPopup\n    });\n  }\n  toggleImprovePopup() {\n    this.setState({\n      showImprovePopup: !this.state.showImprovePopup\n    });\n  }\n  callIncrease = (desc, color) => {\n    api.upVote(this.props.team, this.props.sprint, color, desc.item)\n    .then(resp =>\n    this.fetchingLists())\n  }\n  fetchingLists() {\n    api\n      .fetchItems(this.props.team, this.props.sprint, \"bad\")\n      .then(bad_items => {\n        this.setState({\n          bad: bad_items\n        });\n      });\n    api\n      .fetchItems(this.props.team, this.props.sprint, \"well\")\n      .then(well_items => {\n        this.setState({\n          well: well_items\n        });\n      });\n    api\n      .fetchItems(this.props.team, this.props.sprint, \"todo\")\n      .then(todo_items => {\n        this.setState({\n          todo: todo_items\n        });\n      });\n  }\n  componentDidUpdate(prevProps, prevState) {\n    if (!equal(this.state.welldata, prevState.welldata)) {\n      api\n        .postDescription(\n          this.props.team,\n          this.props.sprint,\n          this.state.currentCat,\n          this.state.welldata\n        )\n        .then(value => this.fetchingLists());\n    }\n    if(!equal(this.props.sprint, prevProps.sprint )){\n      this.fetchingLists()\n    }\n  }\n  render() {\n    return (\n      <div>\n        <Container fluid={true}>\n          <Row>\n            <Col s={12} md={4}>\n              <Card>\n                {this.state.showWellPopup ? (\n                  <Popup\n                    text='Click \"Close Button\" to hide popup'\n                    closePopup={this.toggleWellPopup.bind(this)}\n                    category={\"well\"}\n                    sendData={this.getDataFromChild}\n                  />\n                ) : null}\n                <Card.Body\n                  className=\"card_title\"\n                  onClick={this.toggleWellPopup.bind(this)}\n                >\n                  Went Well\n                </Card.Body>\n              </Card>\n              <Card.Body className={'card_body well'}>\n              <Category items={this.state.well} color={\"well\"} upvoted={this.callIncrease.bind(this)}/>\n              </Card.Body>\n\n          </Col>\n            <Col s={12} md={4}>\n              <Card>\n                {this.state.showBadPopup ? (\n                  <Popup\n                    text='Click \"Close Button\" to hide popup'\n                    closePopup={this.toggleBadPopup.bind(this)}\n                    category={\"bad\"}\n                    sendData={this.getDataFromChild}\n                  />\n                ) : null}\n                <Card.Body\n                  className=\"card_title\"\n                  onClick={this.toggleBadPopup.bind(this)}\n                >\n                  Improve On\n                </Card.Body>\n              </Card>\n              <Card.Body className={'card_body bad'}>\n              <Category items={this.state.bad} color={\"bad\"} upvoted={this.callIncrease.bind(this)}/>\n              </Card.Body>\n          </Col>\n            <Col s={12} md={4}>\n              <Card>\n                {this.state.showImprovePopup ? (\n                  <Popup\n                    text='Click \"Close Button\" to hide popup'\n                    closePopup={this.toggleImprovePopup.bind(this)}\n                    category={\"todo\"}\n                    sendData={this.getDataFromChild}\n                  />\n                ) : null}\n                <Card.Body\n                  className=\"card_title\"\n                  onClick={this.toggleImprovePopup.bind(this)}\n                >\n                  To Do\n                </Card.Body>\n              </Card>\n              <Card.Body className={'card_body todo'}>\n              <Category items={this.state.todo} color={\"todo\"} upvoted={this.callIncrease.bind(this)}/>\n              </Card.Body>\n            </Col>\n          </Row>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default TeamBoard;\n","import React from \"react\";\nimport Header from \"./Header\";\nimport TeamBoard from \"./TeamBoard\";\nimport Popup from \"./Popup\";\nimport * as api from \"../api\";\nimport { Form, Row, Col, Button, Collapse, Dropdown } from \"react-bootstrap\";\n\nclass Splash extends React.Component {\n  state = {\n    teams: [],\n    sprints: [\"0\"],\n    selectedTeam: \"\",\n    selectedSprint: \"\",\n    open: false\n  };\n  componentDidMount() {\n    api.fetchTeams().then(teams => {\n      this.setState({\n        teams\n      });\n      api.fetchSprint(this.state.selectedTeam).then(sprints => {\n        this.setState({\n          sprints\n        });\n      });\n    });\n  }\n  changeTeam(team) {\n    api.fetchSprint(team.team).then(sprints => {\n      this.setState({\n        sprints: sprints,\n        selectedTeam: team.team,\n        selectedSprint: sprints[0]\n      });\n    });\n  }\n  changeSprint(sprint) {\n    this.setState({\n      selectedSprint: sprint.sprint\n    });\n  }\n  handleSubmit(event) {\n    api\n      .createTeam(this.state.selectedTeam, this.state.selectedSprint)\n      .then(resp => console.log(resp));\n  }\n  handleChange(event) {\n    this.setState({ [event.target.name]: event.target.value });\n  }\n  render() {\n    return (\n      <div className=\"Splash\">\n        <div className=\"backgroundImage\">\n          <Row>\n            <Col md={{ span: 6, offset: 3 }}>\n              <Dropdown>\n                <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\n                  Select a Team\n                </Dropdown.Toggle>\n                <Dropdown.Menu>\n                  {this.state.teams.map(team => (\n                    <Dropdown.Item\n                      onClick={this.changeTeam.bind(this, { team }) }\n                    >\n                      {team}\n                    </Dropdown.Item>\n                  ))}\n                </Dropdown.Menu>\n              </Dropdown>\n              <Dropdown>\n                <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\n                  {this.state.selectedSprint}\n                </Dropdown.Toggle>\n                <Dropdown.Menu>\n                  {this.state.sprints.map(sprint => (\n                    <Dropdown.Item onClick={this.changeSprint.bind(this, { sprint }) }>{sprint}</Dropdown.Item>\n                  ))}\n                </Dropdown.Menu>\n              </Dropdown>\n            </Col>\n          </Row>\n          <Row>\n            <Col md={{ span: 6, offset: 3 }}>\n              <Button\n              >\n                Go To {this.state.selectedTeam} Board for Sprint{\" \"}\n                {this.state.selectedSprint}\n              </Button>\n            </Col>\n          </Row>\n          <Row>\n            <Col md={{ span: 6, offset: 3 }}>\n              <Button\n                onClick={() => this.setState({ open: !this.state.open })}\n                aria-controls=\"example-collapse-text\"\n                aria-expanded={this.state.open}\n              >\n                Create a New Board\n              </Button>\n              <Collapse in={this.state.open}>\n                <div id=\"example-collapse-text\">\n                  <Form onSubmit={this.handleSubmit.bind(this)}>\n                    <Form.Control\n                      type=\"text\"\n                      name=\"selectedTeam\"\n                      placeholder=\"Enter Team Name\"\n                      onChange={this.handleChange.bind(this)}\n                    />\n\n                    <Form.Control\n                      type=\"number\"\n                      name=\"selectedSprint\"\n                      placeholder=\"Enter Sprint Number\"\n                      onChange={this.handleChange.bind(this)}\n                    />\n                    <Form.Control\n                      type=\"submit\"\n                      sprintvalue=\"selectedSprint\"\n                      value=\"Submit\"\n                    />\n                  </Form>\n                </div>\n              </Collapse>\n            </Col>\n          </Row>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Splash;\n","import React from 'react';\nimport Header from './Header';\nimport TeamBoard from './TeamBoard'\nimport Popup from './Popup'\nimport Splash from './Splash'\nimport {Button} from 'react-bootstrap'\nimport {BrowserRouter, Route} from 'react-router-dom'\nclass App extends React.Component {\n  state = {\n    pageHeader: 'Retro',\n    showPopup: false,\n    selectTeam: \"\",\n    selectSprint: \"\"\n  }\n  togglePopup() {\n   this.setState({\n     showPopup: !this.state.showPopup\n   });\n }\n  onselectTeam = (team) => {\n    this.setState({ selectTeam: team})\n  }\n  onselectSprint = (sprint) =>{\n    this.setState({ selectSprint: sprint})\n  }\n  render() {\n    return (\n      <div className=\"App\">\n      <Splash/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport '../node_modules/bootstrap/dist/css/bootstrap.css';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport App from './components/App';\n\nReactDOM.render((\n    <App/>\n), document.getElementById('root'))\n"],"sourceRoot":""}